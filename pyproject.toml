[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "if __name__ == .__main__.:",
]
fail_under = 90

[tool.coverage.run]
branch = true
omit = [
    "/venv/*",
    "/scripts/*",
    "*tests*",
    "*/migrations/*",
    "*asgi*",
    "*wsgi*",
    "/migrations/*",
    "migrate.py",
    "*/shared/migrations/*",
]

[tool.isort]
multi_line_output = 3
line_length = 120
atomic = true
include_trailing_comma = true
use_parentheses = true
skip = ["venv", ".venv", ".git", "scripts", "devtools"]

[tool.black]
line-length = 120
skip-string-normalization = true

[tool.flake8]
exclude = ["venv*", ".venv", ".git", "devtools"]
ignore = ['E231', 'E241', 'F403', 'E704', 'W503']
per-file-ignores = ['__init__.py:F401']
max-line-length = 120
count = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
# https://stackoverflow.com/a/63498715/6039697
disable_test_id_escaping_and_forfeit_all_rights_to_community_support = true
testpaths = [
    "tests"
]

[tool.pylint.messages_control]
disable = ["C0103", "C0114", "C0115", "C0116", "R0903"]

[tool.mypy]
plugins = "pydantic.mypy"
show_error_codes = true
disable_error_code = "valid-type,misc,import-untyped,annotation-unchecked"
exclude = ["venv*", ".venv", ".git", "devtools"]


[[tool.mypy.overrides]]
module = "asyncache.*"
ignore_missing_imports = true


[tool.bandit]
skips = ["B104", "B601"]

[tool.bandit.assert_used]   # B101 semantically
skips = ['*_test.py', '*test_*.py']